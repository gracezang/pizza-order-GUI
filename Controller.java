//Student number: 20065628
package application;

import javafx.fxml.FXML;

import java.util.ArrayList;
import javafx.scene.control.Button;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;

import javafx.event.ActionEvent;

import javafx.scene.control.ChoiceBox;
import javafx.scene.control.TextArea;

//This part of the code is generated by scenebuilder, modify it in order to run.
public class Controller {

    @FXML
    private ChoiceBox<String> sizeC = new ChoiceBox<>();
    @FXML
    private ChoiceBox<String> cheeseC = new ChoiceBox<>();

    @FXML
    private ChoiceBox<String> pineappleC = new ChoiceBox<>();

    @FXML
    private ChoiceBox<String> greenpepperC = new ChoiceBox<>();

    @FXML
    private ChoiceBox<String> hamC = new ChoiceBox<>();

    @FXML
    private TextArea quantities =  new TextArea();

    @FXML
    private TextArea cost = new TextArea();

    @FXML
    private TextArea totalorder = new TextArea();
    
    @FXML
	private Button calc = new Button();
      
    // This part of code is to link the value to the button made in scenebuilder
    public void getPizza(int num){
    	sz = sizeC.getValue();
    	cs = cheeseC.getValue();
    	gp = greenpepperC.getValue();
		hm = hamC.getValue();
		pa = pineappleC.getValue();
		if (!pa.equals("none") && hm.equals("none")) {
			pineappleC.setValue("none");
			pa = "none";
		}
		if (!gp.equals("none") && hm.equals("none")) {
			greenpepperC.setValue("none");
			gp = "none";
		}
    	try {
    		pi = new Pizza(sz, cs, pa, gp, hm);
    	}catch(IllegalPizza an) {
    		return;
    	}
    	float price = pi.getCost() * num;
    	
    	cost.setText(String.format("$%.2f",price));

    }
    private Pizza pi;
    private LineItem it;
    private String cs;
    private String sz;
    private String gp;
    private String hm;
    private String pa;
    private ArrayList<LineItem> cart = new ArrayList<>();
    private int n = 1;
    
    //Because choicebox is choosen, give the dropdown menu to each menu.
    ObservableList<String> Size = FXCollections.observableArrayList("small", "medium", "large");
	ObservableList<String> Cheese = FXCollections.observableArrayList("single", "double", "triple");
    ObservableList<String> Pineapple = FXCollections.observableArrayList("none", "single");
    ObservableList<String> GreenPepper = FXCollections.observableArrayList("none", "single");
    ObservableList<String> Hamm = FXCollections.observableArrayList("none", "single");
    
    
    
    //This part of the code the default value to the output screen, and get the value using valueProperty as listed in notes.
    @FXML
	void initialize() {
		sizeC.setValue("small");
		cheeseC.setValue("single");
		greenpepperC.setValue("none");
		pineappleC.setValue("none");
		hamC.setValue("none");
		quantities.setText("1");
		sizeC.setItems(Size);
		cheeseC.setItems(Cheese);
		greenpepperC.setItems(GreenPepper);
		pineappleC.setItems(Pineapple);
	    hamC.setItems(Hamm);

	    
	    sizeC.valueProperty().addListener((obVAlue, oldText, newText) ->
	    {
	    	getPizza(n);
	    });
	    sizeC.valueProperty().addListener((obValue, oldText, newText) ->
	    {
	    	getPizza(n);
	    });
	    pineappleC.valueProperty().addListener((obValue, oldText, newText) ->
	    {
	    	getPizza(n);
	    });
	    greenpepperC.valueProperty().addListener((obVAlue, oldText, newText) ->
	    {
	    	getPizza(n);
	    });
	    hamC.valueProperty().addListener((obValue, oldText, newText) ->
	    {
	    	getPizza(n);
	    });
	    quantities.textProperty().addListener((obValue, oldText, newText) ->
		{
			if (newText.equals("")) {
    			cost.setText("");
    			return;
    		}
			int n2 = 1;
			try {
    			n2 = Integer.parseInt(newText);
    			if (n2 < 1 || n2 > 100) {
    				quantities.setText(oldText);
    				return;
    			}
    		    getPizza(n2);
    		} catch (NumberFormatException e) {
    			quantities.setText(oldText);
    			return;
    		}
			n = n2;
		});
	
    }
    
    // This part of the code is to output the text 
	@FXML
	public void Launch(ActionEvent event) {
		try {
    		it = new LineItem(n, pi);
    	}catch(IllegalPizza an) {
    		return;
    	}
    	float cost = 0;
    	String wd = "";
    	cart.add(it);
    	for (LineItem a : cart) {
    		cost += a.getCost();
    		wd+= a.toString() + "\n";
    	}
    	String total = wd + "Total Cost: " + String.format("$%.2f", cost);
    	totalorder.setText(total);
	}	
  
}

